// const xcolor = require('xcolor');
const chalk = require('chalk');
const hackChain = (obj, methods) => {
    if (!methods.length) return obj;
    let ret = obj;
    for (i = 0; i < methods.length; i++) {
        ret = ret[methods[i]];
    }
    return ret;
};
let isOn = false;
const formatString = (obj) => {
    let styles = [];
	let bgChar0 = obj.bg?obj.bg.charAt(0):null;
    if (obj.bold) styles.push('bold');
    if (bgChar0 && bgChar0 !== '#') {
		styles.push('bg' + obj.bg.charAt(0).toUpperCase() + obj.bg.slice(1));
	}
	if(obj.bg && bgChar0 === '#' && obj.color){
		return hackChain(chalk, styles).bgHex(obj.bg).hex(obj.color ? obj.color : '#ffffff')(obj.txt);
	}
    else if (obj.color) return hackChain(chalk, styles).hex(obj.color ? obj.color : '#ffffff')(obj.txt);
    else return hackChain(chalk, styles)(obj.txt);
};
const rep = (char, times) => {
    let a = '';
    for (i = 0; i < times; i++) {
        a += char;
    }
    return a;
};
const exp = {
    up: (num) => {
        process.stdout.moveCursor(0, (num * (-1)));
    },
    back: () => {
        process.stdout.cursorTo(0);
        process.stdout.clearLine();
    },
    post: (arr, cb) => {
        let str = '';
        for (let prop in arr) {
            str += formatString(arr[prop]);
        }
        process.stdout.write(str);
        if (cb) cb();
    }
};
module.exports = exp;
